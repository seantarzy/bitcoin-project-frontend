[{"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/App.js":"1","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Home.js":"2","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/services/utils.js":"3","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/reportWebVitals.js":"4","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/index.js":"5","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/currencies.js":"6","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ArticleCard.js":"7","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Item.js":"8","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/date.js":"9","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/LineChart.js":"10","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ToolTip.js":"11","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/House.js":"12"},{"size":186,"mtime":1609918074988,"results":"13","hashOfConfig":"14"},{"size":7504,"mtime":1613683915195,"results":"15","hashOfConfig":"14"},{"size":1943,"mtime":1613680253764,"results":"16","hashOfConfig":"14"},{"size":362,"mtime":1609917358470,"results":"17","hashOfConfig":"14"},{"size":500,"mtime":1609917358469,"results":"18","hashOfConfig":"14"},{"size":21075,"mtime":1613490920352,"results":"19","hashOfConfig":"14"},{"size":579,"mtime":1610938573912,"results":"20","hashOfConfig":"14"},{"size":1383,"mtime":1613504502996,"results":"21","hashOfConfig":"14"},{"size":143,"mtime":1612847249017,"results":"22","hashOfConfig":"14"},{"size":6381,"mtime":1612847249015,"results":"23","hashOfConfig":"14"},{"size":661,"mtime":1612847249016,"results":"24","hashOfConfig":"14"},{"size":1147,"mtime":1613684378252,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"fuwygk",{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/App.js",["58"],"import logo from './logo.svg';\nimport Home from './Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Home/>\n    </div>\n  );\n}\n\nexport default App;\n",["59","60"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Home.js",["61","62","63","64","65","66","67"],"import React, { Component } from 'react';\nimport moment from 'moment'\nimport {\n  getBitCoinPrice,\n  getBitCoinArticles,\n  getAmazonProducts,\n  getHousingData,\n  getBitcoinStockChartData,\n} from \"./services/utils\";\nimport { day } from \"./date.js\";\nimport Select from \"react-select\";\nimport './App.css'\nimport Currencies from './currencies'\nimport Coin from './assets/bitcoin-coin.png'\nimport ArticleCard  from './ArticleCard'\nimport Item from './Item.js'\nimport LineChart from \"./LineChart\";\nimport InfoBox from './InfoBox'\nimport ToolTip from './ToolTip'\nimport House from './House'\n\n\nconst dotenv = require(\"dotenv\");\n\nconst env = dotenv.config().parsed\n\nclass Home extends Component {\n  state = {\n    itemOfTheDay: null,\n    priceData: null,\n    currencyChosen: \"USD\",\n    currencyDisplayed: \"US Dollars\",\n    currencySymbol: \"$\",\n    flippingCoin: true,\n    articles: [],\n    mobile: false,\n    bitcoinInUSD: null,\n    amazonProducts: [],\n    sortedData: [],\n    fetchingData: true, \n    priceNow: null,\n    fullListOfHouses: [],\n    houses: []\n  };\n\n  handleChartHover(hoverLoc, activePoint) {\n    this.setState({\n      hoverLoc: hoverLoc,\n      activePoint: activePoint,\n    });\n  }\n\n  handleSelect = (e) => {\n    this.setState({ currencyChosen: e.value });\n  this.getBitCoinPriceByCurrentCurrency()\n  };\n\n  handleSubmit = () => {\n    this.setState({\n      currencyDisplayed: this.state.currencyChosen,\n      flippingCoin: true,\n    });\n    this.getBitCoinPriceByCurrentCurrency()\n  }\n\n\n  getBitCoinPriceByCurrentCurrency = ()=>{\n    getBitCoinPrice().then((currencies) => {\n      let bitcoinInUSD = null;\n      let currentCurrencyToUSD = null;\n      currencies.forEach((currency) => {\n        if (currency.currency === \"BTC\") {\n          bitcoinInUSD = currency.rate;\n          parseFloat(bitcoinInUSD);\n          this.setState({bitcoinInUSD})\n        }\n        if (currency.currency === this.state.currencyChosen) {\n          this.setState({ currencySymbol: currency.symbol });\n          currentCurrencyToUSD = currency.rate;\n          parseFloat(currentCurrencyToUSD);\n        }\n      });\n      let currentPrice = (bitcoinInUSD / currentCurrencyToUSD).toFixed(2);\n      this.setState({ priceNow: currentPrice });\n    });\n  }\n  componentDidMount = () => {\n    getHousingData()\n    .then((housingData)=>{\n      this.setState({\n        startingHouseIndex: 0,\n        cutoffHouseIndex: 10,\n        fullListOfHouses: housingData.properties,\n        houses: housingData.properties,\n      });\n    })\n    this.getBitCoinPriceByCurrentCurrency()\n    let sortedData = [];\n    getBitcoinStockChartData()\n      .then((bitcoinData) => {\n        let count = 0;\n        for (let date in bitcoinData.bpi) {\n          sortedData.push({\n            d: moment(date).format(\"MMM DD\"),\n            p: bitcoinData.bpi[date].toLocaleString(),\n            x: count,\n            y: bitcoinData.bpi[date],\n          });\n          count++;\n        }\n      })\n      .then(() => {\n        this.setState({ sortedData: sortedData, fetchingData: false });\n        console.log(this.state.sortedData);\n      });\n\n    // console.log(\"environment \", process.env.REACT_APP_ARTICLE_API_KEY);\n    if (window.innerWidth <= 760) {\n      this.setState({ mobile: true });\n    }\n\n    getBitCoinPrice()\n    if (this.state.articles.length == 0) {\n      getBitCoinArticles().then((articles) => {\n        this.setState({ articles: articles.articles });\n      });\n    }\n  };\n\n  showMoreHouses = ()=>{\n    this.setState({cutoffHouseIndex: this.state.cutoffHouseIndex + 10})\n  }\n\n\n  showLessHouses = ()=>{\n        this.setState({ cutoffHouseIndex: this.state.cutoffHouseIndex - 10 });\n  }\n  render() {\n\n    let articleList = this.state.articles.map((article, index) => {\n      return <ArticleCard key={index} {...article} />;\n    });\n    return (\n      <div className=\"home\">\n        <h1>What is Bitcoin's Price?</h1>\n        <h2>The one million dollar question</h2>\n\n        {this.state.flippingCoin ? (\n          <div className=\"picker-container\">\n            Currency: {this.state.currencyDisplayed}\n            <Select\n              className=\"currency-picker\"\n              options={Currencies}\n              onChange={this.handleSelect}\n              placeholder=\"US Dollar\"\n            />\n          </div>\n        ) : null}\n        {this.state.flippingCoin ? (\n          <div className=\"bitcoin-info\">\n            <p className=\"stock-price\">\n              {this.state.currencySymbol}\n              {this.state.priceNow}\n              {\" \" + this.state.currencyChosen}\n            </p>\n            <p>\n              One bitcoin is worth {this.state.priceNow}{\" \"}\n              {this.state.currencyChosen}s\n            </p>\n            <a\n              className=\"nomics link\"\n              href=\"https://nomics.com/\"\n              target=\"_blank\"\n            >\n              Crypto Market Cap and Pricing Data Provided By Nomics\n            </a>\n            <p className=\"stock-price-symbol\">{this.state.currencySymbol}</p>\n          </div>\n        ) : (\n          // <div className=\"coin\">\n          <img className=\"coin-img\" src={Coin} />\n          // </div>\n        )}\n        <div className=\"container\">\n          <div className=\"row\">\n            <h1>30 Day Bitcoin Price Chart</h1>\n          </div>\n          <div className=\"row\">\n            {!this.state.fetchingData ? (\n              <InfoBox data={this.state.data} />\n            ) : null}\n          </div>\n          <div className=\"row\">\n            <div className=\"popup\">\n              {this.state.hoverLoc ? (\n                <ToolTip\n                  hoverLoc={this.state.hoverLoc}\n                  activePoint={this.state.activePoint}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"chart\">\n              {!this.state.fetchingData ? (\n                <LineChart\n                  data={this.state.sortedData}\n                  onChartHover={(a, b) => this.handleChartHover(a, b)}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div id=\"coindesk\">\n              {\" \"}\n              Powered by <a href=\"http://www.coindesk.com/price/\">CoinDesk</a>\n            </div>\n          </div>\n        </div>\n        <br></br>\n          <div className = \"house-container\">\n            <h1> Made it big with Bitcoin? Invest in Real Estate! </h1>\n        {this.state.houses.slice(0,this.state.cutoffHouseIndex).map((house) => (\n          <House {...house} bitcoinPrice={this.state.bitcoinInUSD} city = {house.address.city} state = {house.address.state} />\n          ))}\n          {this.state.cutoffHouseIndex > 0 ?\n          <div>\n          <button onClick = {this.showMoreHouses}>Show More Houses</button>\n          <button onClick = {this.showLessHouses}>Show Less Houses</button>\n          </div>\n          :\n          this.state.cutoffHouseIndex  === 0 ?\n           <button onClick = {this.showMoreHouses}>Show Houses</button>\n          :\n          this.state.cutoffHouseIndex  === this.state.houses.length ? \n            <button onClick = {this.showLessHouses}>Show Less Houses</button>\n          :\n          this.state.cutoffHouseIndex  === 10 ?\n          <button onClick = {this.showLessHouses}>Hide Houses</button>\n          :\n          null}\n            </div>\n        <div className=\"article-container\">\n          <h2>Articles:</h2> {articleList}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/services/utils.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/reportWebVitals.js",[],["68","69"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/index.js",[],["70","71"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/currencies.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ArticleCard.js",["72","73"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css'\n\nArticleCard.propTypes = {\n    \n};\n\nfunction ArticleCard(props) {\n    return (\n        <div className = \"article-card\">\n            <a href = {props.url} target = \"_blank\">\n             <h2 className = \"article-title\">{props.title}</h2>\n             {props.urlToImage ? \n            <img src= {props.urlToImage} className = \"article-img\" alt=\"\"/> \n            :\n            null }\n            <footer>by {props.author}</footer>\n            </a>\n        </div>\n    );\n}\n\nexport default ArticleCard;",["74","75"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Item.js",["76","77","78"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/date.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/LineChart.js",["79"],"import React, { Component } from \"react\";\nimport \"./LineChart.css\";\n\nclass LineChart extends Component {\n \n    state = {\n      hoverLoc: null,\n      activePoint: null,\n    };\n  \n  // GET X & Y || MAX & MIN\n  getX() {\n    const { data } = this.props;\n    return {\n      min: data[0].x,\n      max: data[data.length - 1].x,\n    };\n  }\n  getY() {\n    const { data } = this.props;\n    return {\n      min: data.reduce((min, p) => (p.y < min ? p.y : min), data[0].y),\n      max: data.reduce((max, p) => (p.y > max ? p.y : max), data[0].y),\n    };\n  }\n  // GET SVG COORDINATES\n  getSvgX(x) {\n    const { svgWidth, yLabelSize } = this.props;\n    return yLabelSize + (x / this.getX().max) * (svgWidth - yLabelSize);\n  }\n  getSvgY(y) {\n    const { svgHeight, xLabelSize } = this.props;\n    const gY = this.getY();\n    return (\n      ((svgHeight - xLabelSize) * gY.max - (svgHeight - xLabelSize) * y) /\n      (gY.max - gY.min)\n    );\n  }\n  // BUILD SVG PATH\n  makePath() {\n    const { data, color } = this.props;\n    let pathD =\n      \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data\n      .map((point, i) => {\n        return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n      })\n      .join(\"\");\n\n    return (\n      <path className=\"linechart_path\" d={pathD} style={{ stroke: color }} />\n    );\n  }\n  // BUILD SHADED AREA\n  makeArea() {\n    const { data } = this.props;\n    let pathD =\n      \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data\n      .map((point, i) => {\n        return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n      })\n      .join(\"\");\n\n    const x = this.getX();\n    const y = this.getY();\n    pathD +=\n      \"L \" +\n      this.getSvgX(x.max) +\n      \" \" +\n      this.getSvgY(y.min) +\n      \" \" +\n      \"L \" +\n      this.getSvgX(x.min) +\n      \" \" +\n      this.getSvgY(y.min) +\n      \" \";\n\n    return <path className=\"linechart_area\" d={pathD} />;\n  }\n  // BUILD GRID AXIS\n  makeAxis() {\n    const { yLabelSize } = this.props;\n    const x = this.getX();\n    const y = this.getY();\n\n    return (\n      <g className=\"linechart_axis\">\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize}\n          y1={this.getSvgY(y.min)}\n          x2={this.getSvgX(x.max)}\n          y2={this.getSvgY(y.min)}\n          strokeDasharray=\"5\"\n        />\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize}\n          y1={this.getSvgY(y.max)}\n          x2={this.getSvgX(x.max)}\n          y2={this.getSvgY(y.max)}\n          strokeDasharray=\"5\"\n        />\n      </g>\n    );\n  }\n  makeLabels() {\n    const { svgHeight, svgWidth, xLabelSize, yLabelSize } = this.props;\n    const padding = 5;\n    return (\n      <g className=\"linechart_label\">\n        {/* Y AXIS LABELS */}\n        <text\n          transform={`translate(${yLabelSize / 2}, 20)`}\n          textAnchor=\"middle\"\n        >\n          {this.getY().max.toLocaleString(\"us-EN\", {\n            style: \"currency\",\n            currency: \"USD\",\n          })}\n        </text>\n        <text\n          transform={`translate(${yLabelSize / 2}, ${\n            svgHeight - xLabelSize - padding\n          })`}\n          textAnchor=\"middle\"\n        >\n          {this.getY().min.toLocaleString(\"us-EN\", {\n            style: \"currency\",\n            currency: \"USD\",\n          })}\n        </text>\n        {/* X AXIS LABELS */}\n        <text\n          transform={`translate(${yLabelSize}, ${svgHeight})`}\n          textAnchor=\"start\"\n        >\n          {this.props.data[0].d}\n        </text>\n        <text\n          transform={`translate(${svgWidth}, ${svgHeight})`}\n          textAnchor=\"end\"\n        >\n          {this.props.data[this.props.data.length - 1].d}\n        </text>\n      </g>\n    );\n  }\n  // FIND CLOSEST POINT TO MOUSE\n  getCoords(e) {\n    const { svgWidth, data, yLabelSize } = this.props;\n    const svgLocation = document\n      .getElementsByClassName(\"linechart\")[0]\n      .getBoundingClientRect();\n    const adjustment = (svgLocation.width - svgWidth) / 2; //takes padding into consideration\n    const relativeLoc = e.clientX - svgLocation.left - adjustment;\n\n    let svgData = [];\n    data.map((point, i) => {\n      svgData.push({\n        svgX: this.getSvgX(point.x),\n        svgY: this.getSvgY(point.y),\n        d: point.d,\n        p: point.p,\n      });\n    });\n\n    let closestPoint = {};\n    for (let i = 0, c = 500; i < svgData.length; i++) {\n      if (Math.abs(svgData[i].svgX - this.state.hoverLoc) <= c) {\n        c = Math.abs(svgData[i].svgX - this.state.hoverLoc);\n        closestPoint = svgData[i];\n      }\n    }\n\n    if (relativeLoc - yLabelSize < 0) {\n      this.stopHover();\n    } else {\n      this.setState({\n        hoverLoc: relativeLoc,\n        activePoint: closestPoint,\n      });\n      this.props.onChartHover(relativeLoc, closestPoint);\n    }\n  }\n  // STOP HOVER\n  stopHover() {\n    this.setState({ hoverLoc: null, activePoint: null });\n    this.props.onChartHover(null, null);\n  }\n  // MAKE ACTIVE POINT\n  makeActivePoint() {\n    const { color, pointRadius } = this.props;\n    return (\n      <circle\n        className=\"linechart_point\"\n        style={{ stroke: color }}\n        r={pointRadius}\n        cx={this.state.activePoint.svgX}\n        cy={this.state.activePoint.svgY}\n      />\n    );\n  }\n  // MAKE HOVER LINE\n  createLine() {\n    const { svgHeight, xLabelSize } = this.props;\n    return (\n      <line\n        className=\"hoverLine\"\n        x1={this.state.hoverLoc}\n        y1={-8}\n        x2={this.state.hoverLoc}\n        y2={svgHeight - xLabelSize}\n      />\n    );\n  }\n\n  render() {\n    const { svgHeight, svgWidth } = this.props;\n\n    return (\n      <svg\n        width={svgWidth}\n        height={svgHeight}\n        viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n        className={\"linechart\"}\n        onMouseLeave={() => this.stopHover()}\n        onMouseMove={(e) => this.getCoords(e)}\n      >\n        <g>\n          {this.makeAxis()}\n          {this.makePath()}\n          {this.makeArea()}\n          {this.makeLabels()}\n          {this.state.hoverLoc ? this.createLine() : null}\n          {this.state.hoverLoc ? this.makeActivePoint() : null}\n        </g>\n      </svg>\n    );\n  }\n}\n// DEFAULT PROPS\nLineChart.defaultProps = {\n  data: [],\n  color: \"#2196F3\",\n  pointRadius: 5,\n  svgHeight: 300,\n  svgWidth: 900,\n  xLabelSize: 20,\n  yLabelSize: 80,\n};\n\nexport default LineChart;\n","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ToolTip.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/House.js",["80","81","82"],{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":12},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"91","line":6,"column":3,"nodeType":"85","messageId":"86","endLine":6,"endColumn":20},{"ruleId":"83","severity":1,"message":"92","line":10,"column":10,"nodeType":"85","messageId":"86","endLine":10,"endColumn":13},{"ruleId":"83","severity":1,"message":"93","line":16,"column":8,"nodeType":"85","messageId":"86","endLine":16,"endColumn":12},{"ruleId":"83","severity":1,"message":"94","line":25,"column":7,"nodeType":"85","messageId":"86","endLine":25,"endColumn":10},{"ruleId":"95","severity":1,"message":"96","line":123,"column":36,"nodeType":"97","messageId":"98","endLine":123,"endColumn":38},{"ruleId":"99","severity":1,"message":"100","line":173,"column":15,"nodeType":"101","endLine":173,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":181,"column":11,"nodeType":"104","endLine":181,"endColumn":50},{"ruleId":"87","replacedBy":"105"},{"ruleId":"89","replacedBy":"106"},{"ruleId":"87","replacedBy":"107"},{"ruleId":"89","replacedBy":"108"},{"ruleId":"83","severity":1,"message":"109","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":12,"column":35,"nodeType":"101","endLine":12,"endColumn":52},{"ruleId":"87","replacedBy":"110"},{"ruleId":"89","replacedBy":"111"},{"ruleId":"83","severity":1,"message":"91","line":3,"column":9,"nodeType":"85","messageId":"86","endLine":3,"endColumn":26},{"ruleId":"83","severity":1,"message":"112","line":3,"column":28,"nodeType":"85","messageId":"86","endLine":3,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":24,"column":5,"nodeType":"85","endLine":24,"endColumn":14,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":160,"column":25,"nodeType":"118","messageId":"119","endLine":160,"endColumn":27},{"ruleId":"113","severity":1,"message":"120","line":19,"column":3,"nodeType":"121","endLine":19,"endColumn":5,"suggestions":"122"},{"ruleId":"99","severity":1,"message":"100","line":23,"column":31,"nodeType":"101","endLine":23,"endColumn":46},{"ruleId":"102","severity":1,"message":"103","line":24,"column":11,"nodeType":"104","endLine":24,"endColumn":63},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["123"],"no-negated-in-lhs",["124"],"'getAmazonProducts' is defined but never used.","'day' is defined but never used.","'Item' is defined but never used.","'env' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["123"],["124"],["123"],["124"],"'PropTypes' is defined but never used.",["123"],["124"],"'getBitCoinPrice' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRendered'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [rendered] as a second argument to the useEffect Hook.",["125"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'baths', 'beds', 'bitcoinPrice', and 'price'. Either include them or remove the dependency array.","ArrayExpression",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Add dependencies array: [rendered]",{"range":"131","text":"132"},"Update the dependencies array to be: [baths, beds, bitcoinPrice, price]",{"range":"133","text":"134"},[1006,1006],", [rendered]",[584,586],"[baths, beds, bitcoinPrice, price]"]