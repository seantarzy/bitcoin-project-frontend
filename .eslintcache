[{"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/App.js":"1","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Home.js":"2","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/services/utils.js":"3","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/reportWebVitals.js":"4","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/index.js":"5","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/currencies.js":"6","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ArticleCard.js":"7","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Item.js":"8","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/date.js":"9","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/LineChart.js":"10","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ToolTip.js":"11"},{"size":186,"mtime":1609918074988,"results":"12","hashOfConfig":"13"},{"size":5581,"mtime":1611298747364,"results":"14","hashOfConfig":"13"},{"size":987,"mtime":1612814674827,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1609917358470,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1609917358469,"results":"17","hashOfConfig":"13"},{"size":21029,"mtime":1610573764654,"results":"18","hashOfConfig":"13"},{"size":579,"mtime":1610938573912,"results":"19","hashOfConfig":"13"},{"size":1294,"mtime":1611296347768,"results":"20","hashOfConfig":"13"},{"size":143,"mtime":1611086331656,"results":"21","hashOfConfig":"13"},{"size":6381,"mtime":1611127952768,"results":"22","hashOfConfig":"13"},{"size":661,"mtime":1611127757102,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"fuwygk",{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/App.js",["54"],"import logo from './logo.svg';\nimport Home from './Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Home/>\n    </div>\n  );\n}\n\nexport default App;\n",["55","56"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Home.js",["57","58","59"],"import React, { Component } from 'react';\nimport moment from 'moment'\nimport {\n  getBitCoinPrice,\n  getBitCoinArticles,\n  getAmazonProducts,\n  getBitcoinStockChartData,\n} from \"./services/utils\";\nimport { day } from \"./date.js\";\nimport Select from \"react-select\";\nimport './App.css'\nimport Currencies from './currencies'\nimport Coin from './assets/bitcoin-coin.png'\nimport ArticleCard  from './ArticleCard'\nimport Item from './Item.js'\nimport LineChart from \"./LineChart\";\nimport InfoBox from './InfoBox'\nimport ToolTip from './ToolTip'\n\n\n// import {}'./.env'\n// require(\"dotenv\").config();\n\n// const webpack = require(\"webpack\");\nconst dotenv = require(\"dotenv\");\n\nconst env = dotenv.config().parsed\n\nclass Home extends Component {\n  state = {\n    itemOfTheDay: null,\n    priceData: null,\n    currencyChosen: \"US Dollars\",\n    currencyDisplayed: \"US Dollars\",\n    flippingCoin: true,\n    articles: [],\n    mobile: false,\n    amazonProducts: [],\n    sortedData: [],\n    fetchingData: true, \n    priceNow: null\n  };\n\n  handleChartHover(hoverLoc, activePoint) {\n    this.setState({\n      hoverLoc: hoverLoc,\n      activePoint: activePoint,\n    });\n  }\n\n  handleSelect = (e) => {\n    this.setState({ currencyChosen: e.value });\n  };\n\n  handleSubmit = () => {\n    this.setState({\n      currencyDisplayed: this.state.currencyChosen,\n      flippingCoin: true,\n    });\n    getBitCoinPrice(this.state.currencyChosen).then((priceData) => {\n      this.setState({ priceData: priceData.priceData, flippingCoin: false, priceNow: priceData.priceValue });\n    });\n  };\n  componentDidMount = () => {\n    let sortedData = [];\n    console.log(\"price now\", this.state.priceNow)\n    getBitcoinStockChartData()\n      .then((bitcoinData) => {\n        let count = 0;\n        for (let date in bitcoinData.bpi) {\n          sortedData.push({\n            d: moment(date).format(\"MMM DD\"),\n            p: bitcoinData.bpi[date].toLocaleString(),\n            x: count,\n            y: bitcoinData.bpi[date],\n          });\n          count++;\n        }\n      })\n      .then(() => {\n        this.setState({ sortedData: sortedData, fetchingData: false });\n        console.log(this.state.sortedData);\n      });\n\n    // console.log(\"environment \", process.env.REACT_APP_ARTICLE_API_KEY);\n    if (window.innerWidth <= 760) {\n      this.setState({ mobile: true });\n    }\n\n    // console.log(Currencies)\n    getBitCoinPrice(\"US Dollars\").then((priceData) => {\n      this.setState({\n        priceData: priceData.priceData,\n        flippingCoin: false,\n        priceNow: priceData.priceValue,\n      });\n    });\n    if (this.state.articles.length == 0) {\n      getBitCoinArticles().then((articles) => {\n        // articles.slice(10)\n        this.setState({ articles: articles.articles });\n      });\n    }\n\n    if (this.state.itemOfTheDay === null) {\n      getAmazonProducts().then((amazonProducts) => {\n        this.setState({ itemOfTheDay: amazonProducts[day] });\n        // console.log(\"amazon: \",amazonProducts)\n      });\n      //     getAmazonProducts().then((amazonProducts) =>{\n      // this.setState({ amazonProducts: amazonProducts.amazonProducts });\n    }\n  };\n\n  render() {\n\n    let articleList = this.state.articles.map((article, index) => {\n      return <ArticleCard key={index} {...article} />;\n    });\n    return (\n      <div className=\"home\">\n        <h1>What is Bitcoin's Price?</h1>\n        <h2>The one million dollar question</h2>\n        Currency: {this.state.currencyDisplayed}\n        <div className=\"picker-container\">\n          <Select\n            className=\"currency-picker\"\n            options={Currencies}\n            onChange={this.handleSelect}\n            placeholder=\"US Dollar\"\n          />\n        </div>\n        {!this.state.flippingCoin ? (\n          <div className=\"bitcoin-info\">\n            <button onClick={this.handleSubmit}>Convert to Coin!</button>\n            <p className=\"stock-price\">{this.state.priceNow}</p>\n            <p>{this.state.priceData}</p>\n          </div>\n        ) : (\n          // <div className=\"coin\">\n          <img className=\"coin-img\" src={Coin} />\n          // </div>\n        )}\n        <div className=\"container\">\n          <div className=\"row\">\n            <h1>30 Day Bitcoin Price Chart</h1>\n          </div>\n          <div className=\"row\">\n            {!this.state.fetchingData ? (\n              <InfoBox data={this.state.data} />\n            ) : null}\n          </div>\n          <div className=\"row\">\n            <div className=\"popup\">\n              {this.state.hoverLoc ? (\n                <ToolTip\n                  hoverLoc={this.state.hoverLoc}\n                  activePoint={this.state.activePoint}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"chart\">\n              {!this.state.fetchingData ? (\n                <LineChart\n                  data={this.state.sortedData}\n                  onChartHover={(a, b) => this.handleChartHover(a, b)}\n                />\n              ) : null}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div id=\"coindesk\">\n              {\" \"}\n              Powered by <a href=\"http://www.coindesk.com/price/\">CoinDesk</a>\n            </div>\n          </div>\n        </div>\n        <br>\n        </br>\n        {this.state.itemOfTheDay ? (\n          <Item\n            {...this.state.itemOfTheDay}\n            currentPrice={this.state.priceNow}\n          />\n        ) : null}\n        <div className=\"article-container\">Articles: {articleList}</div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/services/utils.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/reportWebVitals.js",[],["60","61"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/index.js",[],["62","63"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/currencies.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ArticleCard.js",["64","65"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css'\n\nArticleCard.propTypes = {\n    \n};\n\nfunction ArticleCard(props) {\n    return (\n        <div className = \"article-card\">\n            <a href = {props.url} target = \"_blank\">\n             <h2 className = \"article-title\">{props.title}</h2>\n             {props.urlToImage ? \n            <img src= {props.urlToImage} className = \"article-img\" alt=\"\"/> \n            :\n            null }\n            <footer>by {props.author}</footer>\n            </a>\n        </div>\n    );\n}\n\nexport default ArticleCard;","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Item.js",["66"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/date.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/LineChart.js",["67"],"import React, { Component } from \"react\";\nimport \"./LineChart.css\";\n\nclass LineChart extends Component {\n \n    state = {\n      hoverLoc: null,\n      activePoint: null,\n    };\n  \n  // GET X & Y || MAX & MIN\n  getX() {\n    const { data } = this.props;\n    return {\n      min: data[0].x,\n      max: data[data.length - 1].x,\n    };\n  }\n  getY() {\n    const { data } = this.props;\n    return {\n      min: data.reduce((min, p) => (p.y < min ? p.y : min), data[0].y),\n      max: data.reduce((max, p) => (p.y > max ? p.y : max), data[0].y),\n    };\n  }\n  // GET SVG COORDINATES\n  getSvgX(x) {\n    const { svgWidth, yLabelSize } = this.props;\n    return yLabelSize + (x / this.getX().max) * (svgWidth - yLabelSize);\n  }\n  getSvgY(y) {\n    const { svgHeight, xLabelSize } = this.props;\n    const gY = this.getY();\n    return (\n      ((svgHeight - xLabelSize) * gY.max - (svgHeight - xLabelSize) * y) /\n      (gY.max - gY.min)\n    );\n  }\n  // BUILD SVG PATH\n  makePath() {\n    const { data, color } = this.props;\n    let pathD =\n      \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data\n      .map((point, i) => {\n        return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n      })\n      .join(\"\");\n\n    return (\n      <path className=\"linechart_path\" d={pathD} style={{ stroke: color }} />\n    );\n  }\n  // BUILD SHADED AREA\n  makeArea() {\n    const { data } = this.props;\n    let pathD =\n      \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data\n      .map((point, i) => {\n        return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n      })\n      .join(\"\");\n\n    const x = this.getX();\n    const y = this.getY();\n    pathD +=\n      \"L \" +\n      this.getSvgX(x.max) +\n      \" \" +\n      this.getSvgY(y.min) +\n      \" \" +\n      \"L \" +\n      this.getSvgX(x.min) +\n      \" \" +\n      this.getSvgY(y.min) +\n      \" \";\n\n    return <path className=\"linechart_area\" d={pathD} />;\n  }\n  // BUILD GRID AXIS\n  makeAxis() {\n    const { yLabelSize } = this.props;\n    const x = this.getX();\n    const y = this.getY();\n\n    return (\n      <g className=\"linechart_axis\">\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize}\n          y1={this.getSvgY(y.min)}\n          x2={this.getSvgX(x.max)}\n          y2={this.getSvgY(y.min)}\n          strokeDasharray=\"5\"\n        />\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize}\n          y1={this.getSvgY(y.max)}\n          x2={this.getSvgX(x.max)}\n          y2={this.getSvgY(y.max)}\n          strokeDasharray=\"5\"\n        />\n      </g>\n    );\n  }\n  makeLabels() {\n    const { svgHeight, svgWidth, xLabelSize, yLabelSize } = this.props;\n    const padding = 5;\n    return (\n      <g className=\"linechart_label\">\n        {/* Y AXIS LABELS */}\n        <text\n          transform={`translate(${yLabelSize / 2}, 20)`}\n          textAnchor=\"middle\"\n        >\n          {this.getY().max.toLocaleString(\"us-EN\", {\n            style: \"currency\",\n            currency: \"USD\",\n          })}\n        </text>\n        <text\n          transform={`translate(${yLabelSize / 2}, ${\n            svgHeight - xLabelSize - padding\n          })`}\n          textAnchor=\"middle\"\n        >\n          {this.getY().min.toLocaleString(\"us-EN\", {\n            style: \"currency\",\n            currency: \"USD\",\n          })}\n        </text>\n        {/* X AXIS LABELS */}\n        <text\n          transform={`translate(${yLabelSize}, ${svgHeight})`}\n          textAnchor=\"start\"\n        >\n          {this.props.data[0].d}\n        </text>\n        <text\n          transform={`translate(${svgWidth}, ${svgHeight})`}\n          textAnchor=\"end\"\n        >\n          {this.props.data[this.props.data.length - 1].d}\n        </text>\n      </g>\n    );\n  }\n  // FIND CLOSEST POINT TO MOUSE\n  getCoords(e) {\n    const { svgWidth, data, yLabelSize } = this.props;\n    const svgLocation = document\n      .getElementsByClassName(\"linechart\")[0]\n      .getBoundingClientRect();\n    const adjustment = (svgLocation.width - svgWidth) / 2; //takes padding into consideration\n    const relativeLoc = e.clientX - svgLocation.left - adjustment;\n\n    let svgData = [];\n    data.map((point, i) => {\n      svgData.push({\n        svgX: this.getSvgX(point.x),\n        svgY: this.getSvgY(point.y),\n        d: point.d,\n        p: point.p,\n      });\n    });\n\n    let closestPoint = {};\n    for (let i = 0, c = 500; i < svgData.length; i++) {\n      if (Math.abs(svgData[i].svgX - this.state.hoverLoc) <= c) {\n        c = Math.abs(svgData[i].svgX - this.state.hoverLoc);\n        closestPoint = svgData[i];\n      }\n    }\n\n    if (relativeLoc - yLabelSize < 0) {\n      this.stopHover();\n    } else {\n      this.setState({\n        hoverLoc: relativeLoc,\n        activePoint: closestPoint,\n      });\n      this.props.onChartHover(relativeLoc, closestPoint);\n    }\n  }\n  // STOP HOVER\n  stopHover() {\n    this.setState({ hoverLoc: null, activePoint: null });\n    this.props.onChartHover(null, null);\n  }\n  // MAKE ACTIVE POINT\n  makeActivePoint() {\n    const { color, pointRadius } = this.props;\n    return (\n      <circle\n        className=\"linechart_point\"\n        style={{ stroke: color }}\n        r={pointRadius}\n        cx={this.state.activePoint.svgX}\n        cy={this.state.activePoint.svgY}\n      />\n    );\n  }\n  // MAKE HOVER LINE\n  createLine() {\n    const { svgHeight, xLabelSize } = this.props;\n    return (\n      <line\n        className=\"hoverLine\"\n        x1={this.state.hoverLoc}\n        y1={-8}\n        x2={this.state.hoverLoc}\n        y2={svgHeight - xLabelSize}\n      />\n    );\n  }\n\n  render() {\n    const { svgHeight, svgWidth } = this.props;\n\n    return (\n      <svg\n        width={svgWidth}\n        height={svgHeight}\n        viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n        className={\"linechart\"}\n        onMouseLeave={() => this.stopHover()}\n        onMouseMove={(e) => this.getCoords(e)}\n      >\n        <g>\n          {this.makeAxis()}\n          {this.makePath()}\n          {this.makeArea()}\n          {this.makeLabels()}\n          {this.state.hoverLoc ? this.createLine() : null}\n          {this.state.hoverLoc ? this.makeActivePoint() : null}\n        </g>\n      </svg>\n    );\n  }\n}\n// DEFAULT PROPS\nLineChart.defaultProps = {\n  data: [],\n  color: \"#2196F3\",\n  pointRadius: 5,\n  svgHeight: 300,\n  svgWidth: 900,\n  xLabelSize: 20,\n  yLabelSize: 80,\n};\n\nexport default LineChart;\n",["68","69"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ToolTip.js",[],{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"78","line":27,"column":7,"nodeType":"72","messageId":"73","endLine":27,"endColumn":10},{"ruleId":"79","severity":1,"message":"80","line":98,"column":36,"nodeType":"81","messageId":"82","endLine":98,"endColumn":38},{"ruleId":"83","severity":1,"message":"84","line":141,"column":11,"nodeType":"85","endLine":141,"endColumn":50},{"ruleId":"74","replacedBy":"86"},{"ruleId":"76","replacedBy":"87"},{"ruleId":"74","replacedBy":"88"},{"ruleId":"76","replacedBy":"89"},{"ruleId":"70","severity":1,"message":"90","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":12,"column":35,"nodeType":"93","endLine":12,"endColumn":52},{"ruleId":"94","severity":1,"message":"95","line":22,"column":5,"nodeType":"72","endLine":22,"endColumn":14,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":160,"column":25,"nodeType":"99","messageId":"100","endLine":160,"endColumn":27},{"ruleId":"74","replacedBy":"101"},{"ruleId":"76","replacedBy":"102"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"'env' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["103"],["104"],["103"],["104"],"'PropTypes' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRendered'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [rendered, howManyItemsCanYouBuy] as a second argument to the useEffect Hook.",["105"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["103"],["104"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Add dependencies array: [rendered, howManyItemsCanYouBuy]",{"range":"108","text":"109"},[917,917],", [rendered, howManyItemsCanYouBuy]"]