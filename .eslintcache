[{"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/App.js":"1","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Home.js":"2","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/services/utils.js":"3","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/reportWebVitals.js":"4","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/index.js":"5","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/currencies.js":"6","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ArticleCard.js":"7","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Item.js":"8","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/date.js":"9","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/LineChart.js":"10","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ToolTip.js":"11","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/House.js":"12","/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/InfoBox.js":"13"},{"size":186,"mtime":1609918074988,"results":"14","hashOfConfig":"15"},{"size":7660,"mtime":1613698496212,"results":"16","hashOfConfig":"15"},{"size":3165,"mtime":1613698461717,"results":"17","hashOfConfig":"15"},{"size":362,"mtime":1609917358470,"results":"18","hashOfConfig":"15"},{"size":500,"mtime":1609917358469,"results":"19","hashOfConfig":"15"},{"size":21075,"mtime":1613490920352,"results":"20","hashOfConfig":"15"},{"size":737,"mtime":1613698808305,"results":"21","hashOfConfig":"15"},{"size":1383,"mtime":1613504502996,"results":"22","hashOfConfig":"15"},{"size":143,"mtime":1612847249017,"results":"23","hashOfConfig":"15"},{"size":6381,"mtime":1612847249015,"results":"24","hashOfConfig":"15"},{"size":661,"mtime":1612847249016,"results":"25","hashOfConfig":"15"},{"size":1147,"mtime":1613684378252,"results":"26","hashOfConfig":"15"},{"size":2282,"mtime":1612847249014,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"fuwygk",{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/App.js",["60"],"import logo from './logo.svg';\nimport Home from './Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Home/>\n    </div>\n  );\n}\n\nexport default App;\n",["61","62"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Home.js",["63","64","65","66","67","68","69"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/services/utils.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/reportWebVitals.js",[],["70","71"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/index.js",[],["72","73"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/currencies.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ArticleCard.js",["74","75","76"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/Item.js",["77","78","79"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/date.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/LineChart.js",["80"],"import React, { Component } from \"react\";\nimport \"./LineChart.css\";\n\nclass LineChart extends Component {\n \n    state = {\n      hoverLoc: null,\n      activePoint: null,\n    };\n  \n  // GET X & Y || MAX & MIN\n  getX() {\n    const { data } = this.props;\n    return {\n      min: data[0].x,\n      max: data[data.length - 1].x,\n    };\n  }\n  getY() {\n    const { data } = this.props;\n    return {\n      min: data.reduce((min, p) => (p.y < min ? p.y : min), data[0].y),\n      max: data.reduce((max, p) => (p.y > max ? p.y : max), data[0].y),\n    };\n  }\n  // GET SVG COORDINATES\n  getSvgX(x) {\n    const { svgWidth, yLabelSize } = this.props;\n    return yLabelSize + (x / this.getX().max) * (svgWidth - yLabelSize);\n  }\n  getSvgY(y) {\n    const { svgHeight, xLabelSize } = this.props;\n    const gY = this.getY();\n    return (\n      ((svgHeight - xLabelSize) * gY.max - (svgHeight - xLabelSize) * y) /\n      (gY.max - gY.min)\n    );\n  }\n  // BUILD SVG PATH\n  makePath() {\n    const { data, color } = this.props;\n    let pathD =\n      \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data\n      .map((point, i) => {\n        return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n      })\n      .join(\"\");\n\n    return (\n      <path className=\"linechart_path\" d={pathD} style={{ stroke: color }} />\n    );\n  }\n  // BUILD SHADED AREA\n  makeArea() {\n    const { data } = this.props;\n    let pathD =\n      \"M \" + this.getSvgX(data[0].x) + \" \" + this.getSvgY(data[0].y) + \" \";\n\n    pathD += data\n      .map((point, i) => {\n        return \"L \" + this.getSvgX(point.x) + \" \" + this.getSvgY(point.y) + \" \";\n      })\n      .join(\"\");\n\n    const x = this.getX();\n    const y = this.getY();\n    pathD +=\n      \"L \" +\n      this.getSvgX(x.max) +\n      \" \" +\n      this.getSvgY(y.min) +\n      \" \" +\n      \"L \" +\n      this.getSvgX(x.min) +\n      \" \" +\n      this.getSvgY(y.min) +\n      \" \";\n\n    return <path className=\"linechart_area\" d={pathD} />;\n  }\n  // BUILD GRID AXIS\n  makeAxis() {\n    const { yLabelSize } = this.props;\n    const x = this.getX();\n    const y = this.getY();\n\n    return (\n      <g className=\"linechart_axis\">\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize}\n          y1={this.getSvgY(y.min)}\n          x2={this.getSvgX(x.max)}\n          y2={this.getSvgY(y.min)}\n          strokeDasharray=\"5\"\n        />\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize}\n          y1={this.getSvgY(y.max)}\n          x2={this.getSvgX(x.max)}\n          y2={this.getSvgY(y.max)}\n          strokeDasharray=\"5\"\n        />\n      </g>\n    );\n  }\n  makeLabels() {\n    const { svgHeight, svgWidth, xLabelSize, yLabelSize } = this.props;\n    const padding = 5;\n    return (\n      <g className=\"linechart_label\">\n        {/* Y AXIS LABELS */}\n        <text\n          transform={`translate(${yLabelSize / 2}, 20)`}\n          textAnchor=\"middle\"\n        >\n          {this.getY().max.toLocaleString(\"us-EN\", {\n            style: \"currency\",\n            currency: \"USD\",\n          })}\n        </text>\n        <text\n          transform={`translate(${yLabelSize / 2}, ${\n            svgHeight - xLabelSize - padding\n          })`}\n          textAnchor=\"middle\"\n        >\n          {this.getY().min.toLocaleString(\"us-EN\", {\n            style: \"currency\",\n            currency: \"USD\",\n          })}\n        </text>\n        {/* X AXIS LABELS */}\n        <text\n          transform={`translate(${yLabelSize}, ${svgHeight})`}\n          textAnchor=\"start\"\n        >\n          {this.props.data[0].d}\n        </text>\n        <text\n          transform={`translate(${svgWidth}, ${svgHeight})`}\n          textAnchor=\"end\"\n        >\n          {this.props.data[this.props.data.length - 1].d}\n        </text>\n      </g>\n    );\n  }\n  // FIND CLOSEST POINT TO MOUSE\n  getCoords(e) {\n    const { svgWidth, data, yLabelSize } = this.props;\n    const svgLocation = document\n      .getElementsByClassName(\"linechart\")[0]\n      .getBoundingClientRect();\n    const adjustment = (svgLocation.width - svgWidth) / 2; //takes padding into consideration\n    const relativeLoc = e.clientX - svgLocation.left - adjustment;\n\n    let svgData = [];\n    data.map((point, i) => {\n      svgData.push({\n        svgX: this.getSvgX(point.x),\n        svgY: this.getSvgY(point.y),\n        d: point.d,\n        p: point.p,\n      });\n    });\n\n    let closestPoint = {};\n    for (let i = 0, c = 500; i < svgData.length; i++) {\n      if (Math.abs(svgData[i].svgX - this.state.hoverLoc) <= c) {\n        c = Math.abs(svgData[i].svgX - this.state.hoverLoc);\n        closestPoint = svgData[i];\n      }\n    }\n\n    if (relativeLoc - yLabelSize < 0) {\n      this.stopHover();\n    } else {\n      this.setState({\n        hoverLoc: relativeLoc,\n        activePoint: closestPoint,\n      });\n      this.props.onChartHover(relativeLoc, closestPoint);\n    }\n  }\n  // STOP HOVER\n  stopHover() {\n    this.setState({ hoverLoc: null, activePoint: null });\n    this.props.onChartHover(null, null);\n  }\n  // MAKE ACTIVE POINT\n  makeActivePoint() {\n    const { color, pointRadius } = this.props;\n    return (\n      <circle\n        className=\"linechart_point\"\n        style={{ stroke: color }}\n        r={pointRadius}\n        cx={this.state.activePoint.svgX}\n        cy={this.state.activePoint.svgY}\n      />\n    );\n  }\n  // MAKE HOVER LINE\n  createLine() {\n    const { svgHeight, xLabelSize } = this.props;\n    return (\n      <line\n        className=\"hoverLine\"\n        x1={this.state.hoverLoc}\n        y1={-8}\n        x2={this.state.hoverLoc}\n        y2={svgHeight - xLabelSize}\n      />\n    );\n  }\n\n  render() {\n    const { svgHeight, svgWidth } = this.props;\n\n    return (\n      <svg\n        width={svgWidth}\n        height={svgHeight}\n        viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n        className={\"linechart\"}\n        onMouseLeave={() => this.stopHover()}\n        onMouseMove={(e) => this.getCoords(e)}\n      >\n        <g>\n          {this.makeAxis()}\n          {this.makePath()}\n          {this.makeArea()}\n          {this.makeLabels()}\n          {this.state.hoverLoc ? this.createLine() : null}\n          {this.state.hoverLoc ? this.makeActivePoint() : null}\n        </g>\n      </svg>\n    );\n  }\n}\n// DEFAULT PROPS\nLineChart.defaultProps = {\n  data: [],\n  color: \"#2196F3\",\n  pointRadius: 5,\n  svgHeight: 300,\n  svgWidth: 900,\n  xLabelSize: 20,\n  yLabelSize: 80,\n};\n\nexport default LineChart;\n",["81","82"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/ToolTip.js",[],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/House.js",["83","84","85"],"/Users/seantarzy/Development/bitcoin-price-frontend/bitcoin/src/InfoBox.js",[],{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"86","severity":1,"message":"94","line":6,"column":3,"nodeType":"88","messageId":"89","endLine":6,"endColumn":20},{"ruleId":"86","severity":1,"message":"95","line":11,"column":10,"nodeType":"88","messageId":"89","endLine":11,"endColumn":13},{"ruleId":"86","severity":1,"message":"96","line":17,"column":8,"nodeType":"88","messageId":"89","endLine":17,"endColumn":12},{"ruleId":"86","severity":1,"message":"97","line":26,"column":7,"nodeType":"88","messageId":"89","endLine":26,"endColumn":10},{"ruleId":"98","severity":1,"message":"99","line":128,"column":36,"nodeType":"100","messageId":"101","endLine":128,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":178,"column":15,"nodeType":"104","endLine":178,"endColumn":30},{"ruleId":"105","severity":1,"message":"106","line":186,"column":11,"nodeType":"107","endLine":186,"endColumn":50},{"ruleId":"90","replacedBy":"108"},{"ruleId":"92","replacedBy":"109"},{"ruleId":"90","replacedBy":"110"},{"ruleId":"92","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":17,"column":8,"nodeType":"114","endLine":17,"endColumn":10,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"103","line":20,"column":35,"nodeType":"104","endLine":20,"endColumn":52},{"ruleId":"105","severity":1,"message":"106","line":22,"column":14,"nodeType":"107","endLine":22,"endColumn":50},{"ruleId":"86","severity":1,"message":"94","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":26},{"ruleId":"86","severity":1,"message":"116","line":3,"column":28,"nodeType":"88","messageId":"89","endLine":3,"endColumn":43},{"ruleId":"112","severity":1,"message":"117","line":24,"column":5,"nodeType":"88","endLine":24,"endColumn":14,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":160,"column":25,"nodeType":"121","messageId":"122","endLine":160,"endColumn":27},{"ruleId":"90","replacedBy":"123"},{"ruleId":"92","replacedBy":"124"},{"ruleId":"112","severity":1,"message":"125","line":19,"column":3,"nodeType":"114","endLine":19,"endColumn":5,"suggestions":"126"},{"ruleId":"102","severity":1,"message":"103","line":23,"column":31,"nodeType":"104","endLine":23,"endColumn":46},{"ruleId":"105","severity":1,"message":"106","line":24,"column":11,"nodeType":"107","endLine":24,"endColumn":63},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'getAmazonProducts' is defined but never used.","'day' is defined but never used.","'Item' is defined but never used.","'env' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["127"],["128"],["127"],["128"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.urlToImage'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'getBitCoinPrice' is defined but never used.","React Hook useEffect contains a call to 'setRendered'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [rendered] as a second argument to the useEffect Hook.",["130"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["127"],["128"],"React Hook useEffect has missing dependencies: 'baths', 'beds', 'bitcoinPrice', and 'price'. Either include them or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [props.urlToImage]",{"range":"138","text":"139"},"Add dependencies array: [rendered]",{"range":"140","text":"141"},"Update the dependencies array to be: [baths, beds, bitcoinPrice, price]",{"range":"142","text":"143"},[387,389],"[props.urlToImage]",[1006,1006],", [rendered]",[584,586],"[baths, beds, bitcoinPrice, price]"]